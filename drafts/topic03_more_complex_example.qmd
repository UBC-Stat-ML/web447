---
title: "More complex example"
editor: 
  mode: source
execute: 
  cache: false
---

{{< include ../_macros.qmd >}}

## Outline

```{r}
suppressPackageStartupMessages(require(rstan))
suppressPackageStartupMessages(require(ggplot2))
suppressPackageStartupMessages(require(dplyr))

# data from: https://data.chhs.ca.gov/dataset/covid-19-variant-data
df = read.csv("../../quizzes/q1/covid19_variants.csv")
df$date = as.Date(df$date,format="%Y-%m-%d")

df %>% filter(date > "2021-12-01" & date < "2021-12-31") %>% filter(variant_name == "Omicron") %>% ggplot(aes(x = date, y = percentage)) + geom_point() + ylim(0, 100) + theme_minimal()
```


```{stan output.var = "omicron"}
data { 
  int N; # <1>
  vector<lower=0, upper=1>[N] y;
}
parameters { # <2>
  real<lower=0> concentration;
  real slope;
  real intercept;
}
transformed parameters {
  vector[N] mu = inv_logit(intercept + slope*linspaced_vector(N,0,1));
}
model {
  concentration ~ exponential(1);
  slope ~ normal(0, 1);
  intercept ~ normal(0, 1);
  y ~ beta_proportion(mu, concentration);
}

```
1. The number of datapoints.


```{r message=FALSE, warning=FALSE, results=FALSE}
fit = sampling(
  omicron,         
  data = list(y = pmax(pmin(df$percentage/100,0.999),0.001), N = length(df$percentage)), 
  show_messages = FALSE,
  open_progress = FALSE, 
  chains = 1,
  iter = 2000       # <2>
)
```


```{r}
fit
```



```{r}
samples = extract(fit)

# head(samples$x)
```


```{r}
#hist(samples$x)
```



```{r}
suppressPackageStartupMessages(require(bayesplot))
#mcmc_hist(fit, pars = c("x"))
```

