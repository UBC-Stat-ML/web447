---
title: "More complex example"
editor: 
  mode: source
execute: 
  cache: false
---

{{< include ../_macros.qmd >}}

## Outline

```{r}
suppressPackageStartupMessages(require(rstan))
suppressPackageStartupMessages(require(ggplot2))
suppressPackageStartupMessages(require(dplyr))

# data from: https://data.chhs.ca.gov/dataset/covid-19-variant-data
df = read.csv("../../quizzes/q1/covid19_variants.csv")
df$date = as.Date(df$date,format="%Y-%m-%d")

df = df %>% filter(date > "2021-12-01" & date < "2021-12-31") %>% filter(variant_name == "Omicron")
```

```{r}
df %>% ggplot(aes(x = date, y = percentage)) + geom_point() + ylim(0, 100) + theme_minimal()
```


```{stan output.var = "omicron"}
data { 
  int N; 
  vector<lower=0, upper=1>[N] y;
}
parameters { 
  real<lower=0> concentration;
  real slope;
  real intercept;
}
transformed parameters {
  vector[N] mu = inv_logit(intercept + slope*linspaced_vector(N,0,1));
}
model {
  concentration ~ exponential(1);
  slope ~ normal(0, 1000);
  intercept ~ normal(0, 1000);
  y ~ beta_proportion(mu, concentration);
}

```


```{r message=FALSE, warning=FALSE, results=FALSE, dependson=knitr::dep_prev()}
fit = sampling(
  omicron,         
  data = list(y = pmax(pmin(df$percentage/100,0.999),0.001), N = length(df$percentage)), 
  show_messages = FALSE,
  open_progress = FALSE, 
  chains = 1,
  iter = 10000       
)
```


```{r}
samples = extract(fit)$mu
data = df$percentage
n_samples = nrow(samples)
```


```{r}
xs = 1:length(data) / length(df$percentage)
plot(xs, data/100)

mus = samples
for (i in 1:n_samples) {
  lines(xs, samples[i,], col = rgb(red = 0, green = 0, blue = 0, alpha = 0.01))
}
```
